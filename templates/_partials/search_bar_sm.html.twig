{# For tiny screens: search bar html structure + js + styles #}

{# This upper search bar is unseen by default, it appears on tiny screens by clicking on the navbar search icon (a magnifying glass icon declared in header_navbar.html.twig). #}

<div id="" class="search-container-bar-sm unseen">

  {# Go back icon (hide search bar on click) #}

  <div class="sm-search-back-icon-container">

    <img id="" class="back_from_search_sm_icon" src="{{ asset('back.svg', 'misc')}}" alt="Back to homepage left arrow icon" style="width: 26px;">
    
  </div>

  {#

    Tiny screens search input: the way it works:

    There is only one "true search input" in this app (a div with id #searchbox (and class .ais-SearchBox-input added afterwards by algolia search engine script)).

    But in this app we use several other input fields that can be used to perform a search, they act as proxies: behind the scene their value is provided to the only true search input mentioned above.

  #}

  {# Proxy for #searchbar search input #}

  <form id="search_sm_proxy"> 
    
    <input id="navbar_sm_search_input" class="searchbox-input" name="search" placeholder="Rechercher" autocomplete="off" autocorrect="off" spellcheck="false" type="text"  dir="ltr" style="outline: currentcolor none medium;">

    {# Submit search button #}

    <button class="d-none" type="submit">ok</button>

    <script>

      //When search query is submitted on tiny screens, we hide the onscreen keyboard so that it doesn't hide search results

      function hideKeyboard(element) { //Thanks to https://stackoverflow.com/questions/8335834

        element.attr('readonly', 'readonly'); // Force keyboard to hide on input field.
        element.attr('disabled', 'true'); // Force keyboard to hide on textarea field.
        setTimeout(function() {
            element.blur();  //actually close the keyboard
            // Remove readonly attribute after keyboard is hidden.
            element.removeAttr('readonly');
            element.removeAttr('disabled');
        }, 100);

      }

      // Gets a reference to the form element
      var form = document.getElementById('search_sm_proxy');
      
      // Adds a listener for the "submit" event: we hide keyboard.
      form.addEventListener('submit', function(e) {
        
        e.preventDefault();
        hideKeyboard($("#navbar_sm_search_input"));

      });

    </script>

  </form>


  {# reset search input (cross icon) #}

  <div class="js-reset-search-icon-container unseen">

    <img id="" class="js-reset-search-icon" src="{{ asset('close.svg', 'misc')}}" alt="clear search input" style="height:19px;">

  </div>

  {# filter search results icon #}

  <div class="search-filters-icon-container">

    <img id="" class="js-filter-search-panel panel-hidden" src="{{ asset('filters.svg', 'misc')}}" alt="open filters" style="height:21px; padding-right: 9px;">

  </div>
    
</div>


<script>

  //trigger mobile search bar appearance when user clicks on magnifying glass icon
  $("#search_icon_small_screens").click(function() {

      $(".search-container-bar-sm").removeClass("unseen");
      $("#navbar_sm_search_input").focus();
      $(".search-experience-container").show();
      $("#main-body-container").hide();
      $("#searchbox").css('display','none');

  });

  //trigger hide search bar on mobile when user clicks on go back icon from search bar
  $(".back_from_search_sm_icon").clic k(function() {

    $(".search-container-bar-sm").addClass("unseen");
    $(".search-experience-container").hide();
    $("#main-body-container").show();
    window.scrollTo(0, 0);

  });

  //trigger search filters appearance / disappearance panel on mobile when user clicks on search filters icon
  $(".js-filter-search-panel").click(function() {

    if($(this).hasClass('panel-hidden')){
      $('.search-experience-container .left-panel').show();
      $(this).removeClass('panel-hidden');
    } 
    
    else {
      $('.search-experience-container .left-panel').hide();
      $(this).addClass('panel-hidden')
    }

  });

  /*
  
    Reset (clean) the tiny screens search input when user clicks on black cross icon
    
      This function is managed in algolia_search_default.js because it has to use an event search.on('render') declared in this file.
  
  */

  
  // + see algolia_search_default.js

</script>


{# Styles for tiny screens scearch bar #}

<style>

  .search-container-bar-sm{

    position: fixed; 
    top:0; 
    left:0; 

    width: 100%; 
    height: 59px;
    z-index:100; 

    display: flex; 
    justify-content: space-between; 
    align-items: center; 
                      
    background-color: black; 
    
  }

  .unseen{
    display: none;
  }

  .sm-search-back-icon-container{
    padding-left: 12px;
  }

  .search-icon-container{
    padding-right: 10px;
  }

  #navbar_sm_search_input {
    background-color: transparent;
    padding-bottom: 4px;
    outline: none;
    box-sizing: border-box;
    border: none;
    border-radius: 0;

    color: #e9e2e2;

    border-bottom: 2px solid #e9e2e2;
    text-overflow: ellipsis;
  }

</style>