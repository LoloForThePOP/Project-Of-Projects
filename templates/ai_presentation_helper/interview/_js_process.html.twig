
<script>

    $(document).ready(function () {

        //AI answer template

        const newAIAnswerPattern = ({ answer }) => `

            <div class="assistant-advice-container form-group">

                <h4 class="assistant-advice-label h5 mb-3">La réponse du coach</h4>

                <div class="assistant-advice border">${answer}</div>

            </div>
    
        `;

        //UI initialisation

        $(".answer-loader").hide();

        $(".send-button-container").hide();

        $(".userInput").focus();

        $(".js-ai-create-ppp").hide(); // This button launch project presentation creation, it appears after some AI / user interactions

    // In the begining conversation boxes are hidden, just a page with a start button is displayed.
        $("#process-container").hide(); 
        $(".assistant-advice-container").hide();

        const context = "{{context}}"; // when context is coach, user wants to use the tool without initially wanting to create a propon project presentation page.

        if(context !== "coach"){ // when context is not coach, user knows she wants to create a propon project presentation page, we avoid some initial messages including the teasing start button page.

            $("#introduction-container").hide();
            $("#process-container").show(); // In this case user enters directly to the discussion mode

        };


        //when user click on the start button from the teasing start page, show main ui

        $('#js-start-interview-coach').on('click', function (){

            $("#introduction-container").hide();
            $("#process-container").show();

        });

        // Store user messages count in order to show the create Propon page button when relevant.
        var userMessagesCount = 0;

        //conversation flow
        $('.send-button').on( "click", function() {

            var userMessage = $('.userInput:last').val(); // Getting last user input

            $(".pursue-conversation").hide(); // Hiding send answer to AI button because it is currently processing user answer

            $(".answer-loader").show();

            $.ajax({

                type: "POST",

                url: "{{path('ajax_ai_interview_helper_origin')}}",

                data: { userMessage: userMessage },

                success: function (response) {

                    $("#main-ui form").append([ //appending the ai answer using our ai answer js template
                        { answer: response.aiAnswer },
                    ].map(newAIAnswerPattern));

                    $('.user-input-container:first').clone(true, true).appendTo('#main-ui form'); //appending user input container box (deep cloning (= with events))
                    $('.userInput:last').val(""); // cleaning the appended box

                    $('.send-button-container').appendTo('#main-ui form'); //moving the send button to the end of the form
                    $(".send-button-container").hide(); //hiding the send button when user input is empty
                    $(".answer-loader").hide();
                    $(".pursue-conversation").show(); //Displaying the continue conversation icon

                    //$(".userInput:last-of-type").focus(); (focus should only be done on >= tiny screens (otherwise touchscreen keyboard hides too much of the screen)

                    userMessagesCount++;

                    if(userMessagesCount == 3){ //When user has done at least some interactions, they can create a Propon page, here we notify them when the treshold is attained.

                        var note = null;

                        if(context == "coach"){ //If context is just coaching, then we label the create a Propon page CTA as "Display a project page summary"

                            note = "Note : à tout moment vous pouvez obtenir et enregistrer un résumé de notre conversation en appuyant sur le bouton \"Afficher un résumé\".<br><br>";

                        }else{ //If context is explicitly "user wants to create a Popon page" then we label the call to action button as "Create the Propon Page"

                            note = "Note : à tout moment vous pouvez lancer la création automatique de votre page Propon en appuyant sur le bouton \"Créer la page Propon\".<br><br>";

                        }
                        
                        $('.assistant-advice:last').html(note+response.aiAnswer); //notification is displayed above the ai answer.

                    }

                    if(userMessagesCount >= 3){

                        $(".js-ai-create-ppp").show(); //displaying the CTA "Create a Propon page" button when at least some interactions has been done

                    }
                    
                    // Automatically scroll to the last element

                    var adviceElements = document.getElementsByClassName('assistant-advice');
                    
                    if (adviceElements.length > 0) {

                        var lastAdviceElement = adviceElements[adviceElements.length - 1];

                        var topOffset = lastAdviceElement.offsetTop - 120 /* Adjust for fixed bar height */; // Added the height of the fixed bar

                        window.scrollTo({
                            top: topOffset,
                            behavior: 'smooth'
                        });

                    }

                }

            });

        });


        // Make "send user input button" appears when user fills textarea
        $('.userInput').on('input propertychange', function() {

            if ($(".userInput:last-of-type").val().length > 1 ) {
                $('.send-button-container').show();
            } else {
                $('.send-button-container').hide();
            }

        });

       
        // Send message when user hits enter
        $('.userInput').on('keypress', function(event) {

            if (event.keyCode == 13) {
                // Trigger the button element with a click
                $('.send-button').click();
                $(".userInput").blur();
            }

        });

        /* If we are aware of user's project goal from another page, we don't ask them again, we fill the form first question and send the request */

        const goal = "{{projectGoal}}";

        if (goal != ""){

            $(".userInput:last-of-type").val(goal);
            $(".send-button").click();

        }

        
    });

</script>
