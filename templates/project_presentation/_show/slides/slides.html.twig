{% block stylesheet %}

<link href="/css/slideshow.css" rel="stylesheet">

{% endblock %}

{% if userPresenter %}

	{% embed "/project_presentation/_show/structure_content_skeleton.html.twig" with {'iconName': "slideshow", 'title': "Diaporama", 'additionalClasses': "pp-edition-mode", 'helpContext': "slides",} %}

		{% block editButtons %}

			{% if countSlides <= constant('MAX_SLIDES', presentation) %}
			
				{# Add an image button (triggers a modal with a form) #}
			
				<button type="button" data-bs-toggle="modal" data-bs-target="#addImageSlideFormModal"
				class="pp-edition-mode btn btn-light btn-sm me-3">+ Image</button>

				{# Add a video button (triggers a modal with a form) #}

				<a class="text-decoration-none" data-bs-toggle="modal" data-bs-target="#addVideoSlideFormModal">

					<button class="pp-edition-mode btn btn-light btn-sm me-3">+ Video</button>

				</a>

			{% endif %}

			{% if countSlides > 1 %}

				{# Link to reorder slides page #}

				<a id="manage-slides" href="{{ path('order_slides', {'stringId': presentation.stringId}) }}" class="d-lg-none text-decoration-none me-3">
                        
					<button type="button" class="pp-edition-mode btn btn-light btn-sm" aria-label="Manage Order and Titles Button">Ordre</button>

				</a>
			
			{% endif %}
		
		{% endblock %}

	{% endembed %}

{% endif %}

<!-- Project Presentation Slideshow Display -->
<!-- Structure Container -->

	<!-- Slideshow Container -->

	<div id="slides" class="slideshow-container">

		<!-- Caption Container -->
					
		<div class="caption-container {{userPresenter ? "col-lg-9" : "col-lg-12" }} d-flex align-items-center" >

			{% for slide in presentation.slides %}

				{# span is used because <br> is inserted into contenteditable html element if left empty #}

				<span class="caption" data-text="Titre ou lÃ©gende de l'image" data-edit='{"entity": "slide", "property": "caption", "id": {{slide.id}} }' data-slide-id="{{slide.id}}">{{ slide.caption[:1] | upper ~ slide.caption[1:] }}</span>
				
			{% endfor %}

		</div>
		
		<div class="row m-0">
				
			{#  Slides Container #}

			<div class="slides-container px-0 col edit-hoverable-item"> 

				{% include "project_presentation/_show/slides/_slides_container.html.twig" %}

			</div>

			{#  Thumbnails Container #}
			{% set showThumbnails = false %}

			{% if countSlides > 1 and userPresenter %}
				
				{% set showThumbnails = true %}

				
			
			{% endif %}

			{% if userPresenter %} {# Displaying Thumbnails only for user presenters so they can change orders #}
				  
				<div class="pp-edition-mode thumbnails-container col-lg-2 px-0 d-none {{ showThumbnails ? 'd-lg-flex' }} flex-column align-items-center">
				
					{% include "project_presentation/_show/slides/_thumbnails_container.html.twig" %}
					
				</div>

			{% endif %}

		</div>	

	</div>

<style>

	#slideshow-struct-container .pp-struct-title-container{

		display: inherit; /* in edition mode, default is display initial (which remove this element's margin-bottom) */
	}

</style>

<script>

	var slideIndex = 1;

	showSlides(slideIndex);

	function plusSlides(n) {

		showSlides(slideIndex += n);
		
	}

	function currentSlide(n) {
		showSlides(slideIndex = n);
	}

	function showSlides(n) {

		var i;
		var slides = document.getElementsByClassName("mySlides");
		var dots = document.getElementsByClassName("SlideImageThumbnail");
		var thumbnail = document.getElementsByClassName("thumbnail");
		var captions = document.getElementsByClassName("caption");
		
		if (n > slides.length) {slideIndex = 1}
		
		if (n < 1) {slideIndex = slides.length}
		
		for (i = 0; i < slides.length; i++) {

			slides[i].style.display = "none";

			if(typeof(captions[i]) != 'undefined'){
				captions[i].style.display = "none";
			}
			
		}
		
		for (i = 0; i < dots.length; i++) {
			dots[i].className = dots[i].className.replace(" active", "");
			thumbnail[i].className = thumbnail[i].className.replace(" active", "");
		}
		
		slides[slideIndex-1].style.display = "flex";

		if(typeof(captions[slideIndex-1]) != 'undefined'){
			captions[slideIndex-1].style.display = "block";
		}
		
		dots[slideIndex-1].className += " active";
		thumbnail[slideIndex-1].className += " active";

		if(typeof(captionText) != 'undefined' && captionText != null){
			captionText.innerHTML = dots[slideIndex-1].getAttribute('data-caption');
		}

	}

	
	// reducing caption container height when no slide with caption (see caption flag in _thumbnail_container.html.twig)

	if ($('.hasCaptionFlag').length == 0) {

		$('.caption-container').addClass('no-caption')

	}
	
	// remove thumbnails container when only one slide is displayed

	if ($('.mySlides').length == 1) {

		$('#slides').addClass('only-one-slide');

	}


</script>

{# displaying appropriate image or video slide when hovering its thumbnail (a mess if more than 4 slides ) #}

	<script>

		mouseoverThumbnail(); //if($( ".thumbnail" ).length < 5) {}

		function mouseoverThumbnail() {
		
			$( ".thumbnail" ).mouseover(function() {

				currentSlide($(this).data("loop-index"));
				
			});

		}

	</script>
